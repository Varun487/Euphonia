package com.varun.esa;


import com.intellij.uiDesigner.core.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import com.neelkamath.euphonia.api.*;
import com.neelkamath.euphonia.Quizmaster;
import java.util.List;
import java.io.IOException;

public class chooseArtist {
    private JPanel choosePanel;
    private JButton btnNext;
    private JLabel lblchooseArtist;
    private JTextField txtFArtistName;
    private JFrame frame = new JFrame("chooseArtist");

    public chooseArtist() {
        frame.setContentPane(choosePanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        //frame.setBackground(Color.BLUE);

        btnNext.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                //JOptionPane.showMessageDialog(null, "Hello, World");
                List<ArtistMetadata> artists = null; // The first API.
                try {
                    artists = new Api().searchArtists(txtFArtistName.getText());
                    if (artists == null || artists.size() == 0) {
                        frame.dispose();
                        new errorFrame();
                    } else {
                        try {
//                            Quizmaster Q = new Quizmaster(artists.get(4));
//                            System.out.println();
//                            System.out.println(Q.getQuiz().getReleasedQuestion().getQuestion());
//                            System.out.println(Q.getQuiz().getReleasedQuestion().getAnswer());
//                            System.out.println(Q.getQuiz().getReleasedQuestion().getOptions());
//                            System.out.println();
//                            System.out.println(Q.getQuiz().getCountryQuestion().getQuestion());
//                            System.out.println(Q.getQuiz().getCountryQuestion().getAnswer());
//                            System.out.println(Q.getQuiz().getCountryQuestion().getOptions());
//                            System.out.println();
//                            System.out.println(Q.getQuiz().getGenreQuestion().getQuestion());
//                            System.out.println(Q.getQuiz().getGenreQuestion().getAnswer());
//                            System.out.println(Q.getQuiz().getGenreQuestion().getOptions());
                            new chooseArtistOptions(artists);
                        } catch (Exception e) {
                            frame.dispose();
                            new errorFrame();
                        }
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                frame.dispose();
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        choosePanel = new JPanel();
        choosePanel.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        choosePanel.setBackground(new Color(-16250559));
        choosePanel.setEnabled(false);
        choosePanel.setPreferredSize(new Dimension(600, 400));
        btnNext = new JButton();
        btnNext.setBackground(new Color(-16715776));
        btnNext.setForeground(new Color(-986896));
        btnNext.setText("Next");
        choosePanel.add(btnNext, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lblchooseArtist = new JLabel();
        lblchooseArtist.setBackground(new Color(-16250559));
        lblchooseArtist.setForeground(new Color(-986896));
        lblchooseArtist.setText("PLEASE TYPE THE ARTIST NAME TO GIVE THE QUIZ ON");
        choosePanel.add(lblchooseArtist, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txtFArtistName = new JTextField();
        txtFArtistName.setBackground(new Color(-986896));
        txtFArtistName.setForeground(new Color(-16777216));
        choosePanel.add(txtFArtistName, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        lblchooseArtist.setLabelFor(txtFArtistName);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return choosePanel;
    }

}
