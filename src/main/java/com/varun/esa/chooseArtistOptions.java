package com.varun.esa;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.neelkamath.euphonia.api.*;
import com.neelkamath.euphonia.Quizmaster;
import com.varun.esa.utils.CommonUtils;

import java.io.IOException;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.List;

public class chooseArtistOptions {
    private JPanel chooseArtistOptionsPanel;
    private JLabel lblChooseArtistOption;
    private JButton btnNext;
    private JRadioButton radioButton1;
    private JRadioButton radioButton2;
    private JRadioButton radioButton3;
    private JRadioButton radioButton4;
    JFrame frame = new JFrame("chooseArtistOptions");

    public static int getSelection(ButtonGroup group) {
        int i = 0;
        for (Enumeration<AbstractButton> buttons = group.getElements(); buttons.hasMoreElements(); ) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                return i;
            }
            i++;
        }
        return -1;
    }


    public chooseArtistOptions(List<ArtistMetadata> artists) {
        frame.setContentPane(chooseArtistOptionsPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        //frame.setBackground(Color.BLUE);

        ButtonGroup artistGroup = new ButtonGroup();

        artistGroup.add(radioButton1);
        artistGroup.add(radioButton2);
        artistGroup.add(radioButton3);
        artistGroup.add(radioButton4);

        int i = 0;
        Iterator<AbstractButton> artistButtonIterator = artistGroup.getElements().asIterator();
        while (artistButtonIterator.hasNext()) {
            JRadioButton Button = (JRadioButton) artistButtonIterator.next();
            Button.setText(artists.get(i).getArtist());
            i++;
        }

//        radioButton1.setText(artists.get(0).getArtist());
//
//        radioButton2.setText(artists.get(1).getArtist());
//
//        radioButton3.setText(artists.get(2).getArtist());
//
//        radioButton4.setText(artists.get(3).getArtist());


        btnNext.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                if (CommonUtils.getSelectedButtonText(artistGroup) == null) {
                    lblChooseArtistOption.setText("Please select an Option");
                } else {
                    int Selection = chooseArtistOptions.getSelection(artistGroup);
                    System.out.println(Selection);
                    try {
                        frame.dispose();
                        new genreQ(artists, Selection);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        chooseArtistOptionsPanel = new JPanel();
        chooseArtistOptionsPanel.setLayout(new GridLayoutManager(6, 1, new Insets(0, 0, 0, 0), -1, -1));
        chooseArtistOptionsPanel.setBackground(new Color(-16250559));
        chooseArtistOptionsPanel.setForeground(new Color(-986896));
        chooseArtistOptionsPanel.setPreferredSize(new Dimension(600, 400));
        lblChooseArtistOption = new JLabel();
        lblChooseArtistOption.setForeground(new Color(-986896));
        lblChooseArtistOption.setText("PLEASE CHOOSE A SPECIFIC OPTION:");
        chooseArtistOptionsPanel.add(lblChooseArtistOption, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnNext = new JButton();
        btnNext.setBackground(new Color(-16715776));
        btnNext.setForeground(new Color(-986896));
        btnNext.setText("NEXT");
        chooseArtistOptionsPanel.add(btnNext, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        radioButton1 = new JRadioButton();
        radioButton1.setBackground(new Color(-16250559));
        radioButton1.setForeground(new Color(-986896));
        radioButton1.setText("RadioButton");
        chooseArtistOptionsPanel.add(radioButton1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        radioButton2 = new JRadioButton();
        radioButton2.setBackground(new Color(-16250559));
        radioButton2.setForeground(new Color(-986896));
        radioButton2.setText("RadioButton");
        chooseArtistOptionsPanel.add(radioButton2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        radioButton3 = new JRadioButton();
        radioButton3.setBackground(new Color(-16250559));
        radioButton3.setForeground(new Color(-986896));
        radioButton3.setText("RadioButton");
        chooseArtistOptionsPanel.add(radioButton3, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        radioButton4 = new JRadioButton();
        radioButton4.setBackground(new Color(-16250559));
        radioButton4.setForeground(new Color(-986896));
        radioButton4.setText("RadioButton");
        chooseArtistOptionsPanel.add(radioButton4, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return chooseArtistOptionsPanel;
    }

}
